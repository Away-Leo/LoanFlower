<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          package="com.pingxun.loanflower">

    <!-- 网络权限 -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!-- 震动权限 -->
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!-- 调用相机权限 -->
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <!-- 在SDCard中创建与删除文件权限 -->
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
    <!-- 往SDCard写入数据权限 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <!-- 这个权限用于进行网络定位 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <!-- 这个权限用于访问GPS定位 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <!-- 用于访问wifi网络信息，wifi信息会用于进行网络定位 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <!-- 获取运营商信息，用于支持提供运营商信息相关的接口 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <!-- 这个权限用于获取wifi的获取权限，wifi信息会用来进行网络定位 -->
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
    <!-- 用于读取手机当前的状态 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <!-- 写入扩展存储，向扩展卡写入数据，用于写入离线定位数据 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <!-- SD卡读取权限，用户写入离线定位数据 -->
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
    <!-- 电话服务添加 -->
    <uses-permission android:name="android.permission.CALL_PHONE"/>

    <application
        android:name=".base.App"
        android:allowBackup="true"
        android:icon="@mipmap/app_icon"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/app_icon_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:replace="android:icon">

        <activity
            android:name=".ui.activity.SplashActivity"
            android:launchMode="singleTask"
            android:theme="@style/ViewBigPicTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <provider
            android:name="com.pingxundata.pxcore.providers.PXFileProvider"
            android:authorities="com.pingxun.loanflower.demoprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths"/>
        </provider>


        <!--高德-->
        <meta-data
            android:name="com.amap.api.v2.apikey"
            android:value="188d156cf99efdece0d7c34c62af2a6f"/>
        <service android:name="com.amap.api.location.APSService"/>


        <!--&lt;!&ndash;友盟&ndash;&gt;-->
        <!--<meta-data-->
        <!--android:name="UMENG_APPKEY"-->
        <!--android:value="59c0dfa875ca357945000031" />-->

        <!--<meta-data-->
        <!--android:name="UMENG_CHANNEL"-->
        <!--android:value="YOUYI" />-->

        <service
            android:name=".service.LoginService"
            android:enabled="true"
            android:exported="true"/>
        <activity android:name=".ui.activity.GuidActivity"
                  android:launchMode="singleTask"
                  android:theme="@style/ViewBigPicTheme"/>
        <activity android:name=".ui.activity.MainActivity"
                  android:theme="@style/FullTranslucentTheme"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.ProductInfoActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.LoginActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.ApplyListActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.AboutUsActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.RegistrationProActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.ProductListActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.MsgListActivity"
                  android:launchMode="singleTask"/>
        <activity android:name=".ui.activity.MsgInfoActivity"
                  android:launchMode="singleTask"/>

        <activity
            android:name=".ui.activity.UserInfoFirstActivity"
            android:launchMode="singleTop"/>
        <activity
            android:name=".ui.activity.UserInfoSencondActivity"
            android:launchMode="singleTop"/>
        <activity
            android:name=".ui.activity.UserInfoThirdActivity"
            android:launchMode="singleTop"/>

        <activity
            android:name=".ui.activity.CooperationActivity"
            android:launchMode="singleTop"/>

        <activity
            android:name="com.mob.tools.MobUIShell"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:multiprocess="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"
            android:windowSoftInputMode="stateHidden|adjustResize">
            <!--
            	AuthorizeAdapter表示一个继承自cn.sharesdk.framework.authorize.AuthorizeAdapter
            	的类，这个类可以监听到页面的生命周期，也可以获取授权页面的各种UI控件。
            	开发者可以通过继承AuthorizeAdapter，重写其方法，并获取各种UI来自定义这个页面的行为。
            -->
            <meta-data
                android:name="AuthorizeAdapter"
                android:value="cn.sharesdk.demo.MyAdapter"/>
            <meta-data
                android:name="FBWebShareAdapter"
                android:value="cn.sharesdk.demo.FBWebShareAdapter"/>
            <!--
            	QZoneWebShareAdapter表示一个继承自cn.sharesdk.tencent.qzone.QZoneWebShareAdapter
            	的类，这个类可以监听到页面的生命周期，也可以获QQ空间网页分享权页面的各种UI控件。
            	开发者可以通过继承QZoneWebShareAdapter，重写其方法，并获取各种UI来自定义这个页面的行为。
            <meta-data android:name="QZoneWebShareAdapter" android:value="cn.sharesdk.demo.MyQZoneWebShareAdapter" />
            <meta-data android:name="QQWebShareAdapter" android:value="cn.sharesdk.demo.MyQQWebShareAdapter" />
            -->

            <!-- 调用新浪客户端分享，需要注册的回调activity -->
            <intent-filter>
                <action android:name="com.sina.weibo.sdk.action.ACTION_SDK_REQ_ACTIVITY"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>


        </activity>

        <!-- 微信分享回调 -->
        <activity
            android:name=".wxapi.WXEntryActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:exported="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"/>

        <!--
           如果集成QQ分享，或者使用QQ客户端来进行QQ空间的分享，须要在此处添加一个回调activity，
           对ACTION_VIEW事件的过滤器，其中的scheme是“tencent”前缀再开发者应用的加上appId。如
           果此过滤器不设置，则分享结束以后不能得到正确的回调-->
        <activity
            android:name="cn.sharesdk.tencent.qq.ReceiveActivity"
            android:launchMode="singleTask"
            android:noHistory="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>

                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>

                <data android:scheme="tencent101460238"/>
            </intent-filter>
        </activity>


    </application>

</manifest>